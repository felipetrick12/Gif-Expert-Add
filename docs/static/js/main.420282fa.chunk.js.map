{"version":3,"sources":["components/AddCategory.js","Helpers/GifGridItem.js","components/GifItem.js","components/GifGrid.js","hooks/useEffectGitch.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","category","a","url","encodeURI","fetch","resp","json","data","gif","map","info","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useEffectGitch","imagen","img","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACzCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAW,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACjBC,EADiB,0FACwEC,UAAUH,GADlF,sBAEJI,MAAMF,GAFF,cAEjBG,EAFiB,gBAGAA,EAAKC,OAHL,uBAGfC,EAHe,EAGfA,KAEFC,EAAMD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC/B,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,EAAaC,iBAAiBZ,QAThB,kBAYhBM,GAZgB,4CAAH,sDCAT,SAASO,EAAT,GAA+B,IAAbH,EAAY,EAAZA,MAAMV,EAAM,EAANA,IAEnC,OAEI,sBAAKc,UAAU,6CAAf,UACG,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,OCJxB,IAAMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAX,SAACA,GAAc,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WACNxB,EAAaC,GAAUwB,MACnB,SAAAC,GACIC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAGZ,CAACpB,IAEGqB,EDnByBM,CAAe3B,GAAhC4B,EAFsB,EAE3BrB,KAAYa,EAFe,EAEfA,QAGlB,OACI,qCAGA,6BAAKpB,IACL,6BAAKoB,GAAW,aAChB,6BACI,qBAAKJ,UAAU,YAAf,SACCY,EAAOnB,KAAI,SAACoB,GAAD,OACR,cAACd,EAAD,eAA0Bc,GAAZA,EAAIlB,eEZzBmB,EAAe,WAAM,MAOI5C,mBAAS,CAAC,mBAPd,mBAOzB6C,EAPyB,KAOb9C,EAPa,KAUhC,OACE,qCACE,8CACE,cAAC,EAAD,CAAaA,cAAgBA,IAE/B,uBACA,6BAEM8C,EAAWtB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCrBrBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.420282fa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [  inputValue ,...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n"," \r\n \r\nexport const GifGridItem = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=AXSx9fEtx5743qy4XgeffVSED76UuLpu&q=${encodeURI(category)}&limit=10`; //la api que vamos a traer\r\n    const resp = await fetch(url); //la respuesta de la peticion gracias al fect\r\n    const { data } = await resp.json(); // de la respuesta vamos destrucutrar la data.\r\n\r\n    const gif = data.map((info) => {\r\n    return {\r\n        id: info.id,\r\n        title: info.title,\r\n        url: info.images?.downsized_medium.url,\r\n    };\r\n    });\r\n    return gif;\r\n};","import React from 'react'\r\n\r\nexport default function GifItem({title,url}) {\r\n\r\n    return (\r\n        \r\n        <div className='card animate__animated animate__zoomInDown' >\r\n           <p>{title}</p>\r\n           <img src={url} alt={title}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useEffectGitch } from \"../hooks/useEffectGitch\";\r\nimport GifItem from \"./GifItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   \r\n       const {data:imagen,loading}= useEffectGitch(category);\r\n\r\n\r\n        return (\r\n            <>\r\n\r\n            \r\n            <h2>{category}</h2>\r\n            <h2>{loading && 'Cargando'}</h2>\r\n            <ol>\r\n                <div className='cardGrid '>\r\n                {imagen.map((img) => (\r\n                    <GifItem key={img.id} {...img}/> //se utiliza el expred para enviar propiedades indepenedientes del arreglo\r\n                ))}\r\n               </div>\r\n            </ol>\r\n            </>\r\n        );\r\n};\r\n","import { useState,useEffect } from \"react\"\r\nimport {GifGridItem} from '../Helpers/GifGridItem'\r\n\r\n\r\nexport const useEffectGitch = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        GifGridItem (category).then(\r\n            imgs=>{\r\n                setTimeout(() => {\r\n                 \r\n                    setstate({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                }, 2000);\r\n            }\r\n        )\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n//   const categories = [\"One Samurai\", \"Dragon Ball\", \"Naruto\"]; //es un arreglo que en react no puede ser mutado por que da error, para eso esta el hook de useState\r\n//   const handleApp=()=> { //useState se utliza por que el componenente va cambiar de estado, setComponent para enviar la propiedad que va ser el cambio de estado del elemento\r\n//         setCategories([...categories,'Yakuza']); //para agregar un nuevo elemento al array\r\n        \r\n//   }\r\n\r\n  const [categories, setCategories] = useState([\"Rick And Morty\" ]);\r\n\r\n \r\n  return (\r\n    <>\r\n      <h3>GifExpertAdd</h3>\r\n        <AddCategory setCategories ={setCategories}/>\r\n     \r\n      <hr />\r\n      <ol>\r\n      {\r\n            categories.map( category => (\r\n            \r\n                <GifGrid \r\n                key={category}\r\n                category={category}\r\n                 /> \r\n            ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GifExpertApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}